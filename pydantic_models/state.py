# generated by datamodel-codegen:
#   filename:  state.schema
#   timestamp: 2025-05-13T00:35:34+00:00

"""
VDA5050プロトコルにおけるAGV状態(state)のデータモデル定義モジュール。

このモジュールは、AGV(無人搬送車)からマスターコントロールへ送信される状態情報のJSON構造を
Pydanticモデルとして定義しています。状態情報には、AGVの現在位置、バッテリー状態、作業進捗、
エラー情報、実行中のアクションの状態などが含まれます。

参照: VDA5050 v2.1.0 - セクション6.10 Topic: "state" (from AGV to master control)
"""

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field

from pydantic_models.common import Trajectory


class MapStatus(Enum):
    """
    マップのステータスを表す列挙型。
    
    ENABLED: このマップが現在AGV上で有効/使用中であることを示す
    DISABLED: このマップが現在AGV上で無効であることを示す
    """
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Map(BaseModel):
    """
    AGV上に保存されているマップ情報を表すモデル。
    
    マップID、バージョン、説明、ステータス(有効/無効)を含みます。
    """
    mapId: str = Field(
        ...,
        description="ID of the map describing a defined area of the vehicle's workspace.",
    )
    mapVersion: str = Field(..., description='Version of the map.')
    mapDescription: Optional[str] = Field(
        None, description='Additional information on the map.'
    )
    mapStatus: MapStatus = Field(
        ...,
        description='Information on the status of the map indicating, if a map version is currently used on the vehicle. ENABLED: Indicates this map is currently active / used on the AGV. At most one map with the same mapId can have its status set to ENABLED.<br>DISABLED: Indicates this map version is currently not enabled on the AGV and thus could be enabled or deleted by request.',
    )


class OperatingMode(Enum):
    """
    AGVの動作モードを表す列挙型。
    
    AUTOMATIC: 完全自動モード(マスターコントロールの完全制御下)
    SEMIAUTOMATIC: 半自動モード(マスターコントロールの制御下だが、速度はHMIで制御)
    MANUAL: 手動モード(マスターコントロールの制御外、HMIで操作)
    SERVICE: サービスモード(保守・設定用)
    TEACHIN: ティーチングモード(経路の教示用)
    """
    AUTOMATIC = 'AUTOMATIC'
    SEMIAUTOMATIC = 'SEMIAUTOMATIC'
    MANUAL = 'MANUAL'
    SERVICE = 'SERVICE'
    TEACHIN = 'TEACHIN'


class NodePosition(BaseModel):
    """
    マップ上のノード位置を簡略化して定義するモデル。
    
    座標(x, y)、向き(theta)、マップIDを含みます。
    ステート情報内では、このモデルはorderで定義されたモデルの簡略版として使用されます。
    """
    x: float
    y: float
    theta: Optional[float] = None
    mapId: str


class NodeState(BaseModel):
    """
    AGVが通過すべきノードの状態を表すモデル。
    
    ノードID、シーケンスID、リリース状態(baseかhorizonか)などを含みます。
    注文の進捗管理のために使用されます。
    """
    nodeId: str = Field(..., description='Unique node identification')
    sequenceId: int = Field(
        ..., description='sequenceId to discern multiple nodes with same nodeId.'
    )
    nodeDescription: Optional[str] = Field(
        None, description='Additional information on the node.'
    )
    released: bool = Field(
        ...,
        description='True: indicates that the node is part of the base. False: indicates that the node is part of the horizon.',
    )
    nodePosition: Optional[NodePosition] = Field(
        None,
        description='Node position. The object is defined in chapter 5.4 Topic: Order (from master control to AGV).\nOptional:Master control has this information. Can be sent additionally, e.g., for debugging purposes. ',
    )


class EdgeState(BaseModel):
    """
    AGVが通過すべきエッジの状態を表すモデル。
    
    エッジID、シーケンスID、リリース状態(baseかhorizonか)などを含みます。
    軌跡情報も含めることができます。注文の進捗管理のために使用されます。
    """
    edgeId: str = Field(..., description='Unique edge identification')
    sequenceId: int = Field(..., description='sequenceId of the edge.')
    edgeDescription: Optional[str] = Field(
        None, description='Additional information on the edge.'
    )
    released: bool = Field(
        ...,
        description='True indicates that the edge is part of the base. False indicates that the edge is part of the horizon.',
    )
    trajectory: Optional[Trajectory] = Field(
        None,
        description='The trajectory is to be communicated as a NURBS and is defined in chapter 6.7 Implementation of the Order message.\nTrajectory segments reach from the point, where the AGV starts to enter the edge to the point where it reports that the next node was traversed. ',
    )


class AgvPosition(BaseModel):
    """
    マップ上のAGVの現在位置を表すモデル。
    
    座標(x, y)、向き(theta)、マップID、位置の初期化状態、
    位置精度情報などを含みます。
    """
    x: float
    y: float
    theta: float
    mapId: str
    mapDescription: Optional[str] = None
    positionInitialized: bool = Field(
        ...,
        description='True: position is initialized. False: position is not initizalized.',
    )
    localizationScore: Optional[float] = Field(
        None,
        ge=0.0,
        le=1.0,
        description='Describes the quality of the localization and therefore, can be used, e.g., by SLAM-AGV to describe how accurate the current position information is.\n0.0: position unknown\n1.0: position known\nOptional for vehicles that cannot estimate their localization score.\nOnly for logging and visualization purposes',
    )
    deviationRange: Optional[float] = Field(
        None,
        description='Value for position deviation range in meters. Optional for vehicles that cannot estimate their deviation, e.g., grid-based localization. Only for logging and visualization purposes.',
    )


class Velocity(BaseModel):
    """
    AGVの現在速度を表すモデル。
    
    x方向速度、y方向速度、回転速度(z軸周り)を含みます。
    車両座標系での値です。
    """
    vx: Optional[float] = Field(
        None, description='The AVGs velocity in its x direction'
    )
    vy: Optional[float] = Field(
        None, description='The AVGs velocity in its y direction'
    )
    omega: Optional[float] = Field(
        None, description='The AVGs turning speed around its z axis.'
    )


class BoundingBoxReference(BaseModel):
    """
    積荷のバウンディングボックスの基準点を表すモデル。
    
    基準点は常にバウンディングボックスの底面(高さ=0)の中心であり、
    AGV座標系で記述されます。
    """
    x: float
    y: float
    z: float
    theta: Optional[float] = Field(
        None,
        description='Orientation of the loads bounding box. Important for tugger, trains, etc.',
    )


class LoadDimensions(BaseModel):
    """
    積荷のバウンディングボックスの寸法を表すモデル。
    
    長さ、幅、高さをメートル単位で指定します。
    """
    length: float = Field(
        ..., description='Absolute length of the loads bounding box in meter.'
    )
    width: float = Field(
        ..., description='Absolute width of the loads bounding box in meter.'
    )
    height: Optional[float] = Field(
        None,
        description='Absolute height of the loads bounding box in meter.\nOptional:\nSet value only if known.',
    )


class Load(BaseModel):
    """
    AGVが現在扱っている積荷を表すモデル。
    
    積荷ID、タイプ、位置、寸法、重量などの情報を含みます。
    """
    loadId: Optional[str] = Field(
        None,
        description='Unique identification number of the load (e.g., barcode or RFID). Empty field, if the AGV can identify the load, but did not identify the load yet. Optional, if the AGV cannot identify the load.',
    )
    loadType: Optional[str] = Field(None, description='Type of load.')
    loadPosition: Optional[str] = Field(
        None,
        description='Indicates, which load handling/carrying unit of the AGV is used, e.g., in case the AGV has multiple spots/positions to carry loads. Optional for vehicles with only one loadPosition.',
        examples=['front', 'back', 'positionC1'],
    )
    boundingBoxReference: Optional[BoundingBoxReference] = Field(
        None,
        description='Point of reference for the location of the bounding box. The point of reference is always the center of the bounding box bottom surface (at height = 0) and is described in coordinates of the AGV coordinate system.',
    )
    loadDimensions: Optional[LoadDimensions] = Field(
        None, description='Dimensions of the loads bounding box in meters.'
    )
    weight: Optional[float] = Field(
        None,
        ge=0.0,
        description='Weight of the load in kg. Optional: if the AGV cannot determine the weight.',
    )


class ActionStatus(Enum):
    """
    アクションの状態を表す列挙型。
    
    WAITING: トリガー待ち(ノード通過やエッジ進入など)
    INITIALIZING: 初期化中
    RUNNING: 実行中
    PAUSED: 一時停止中
    FINISHED: 完了
    FAILED: 失敗
    """
    WAITING = 'WAITING'
    INITIALIZING = 'INITIALIZING'
    RUNNING = 'RUNNING'
    PAUSED = 'PAUSED'
    FINISHED = 'FINISHED'
    FAILED = 'FAILED'


class ActionState(BaseModel):
    """
    アクションの現在の状態を表すモデル。
    
    アクションID、タイプ、状態(待機中/実行中/完了など)、結果説明などを含みます。
    アクションの進行状況や結果を追跡するために使用されます。
    """
    actionId: str = Field(
        ..., description='Unique actionId', examples=['blink_123jdaimoim234']
    )
    actionType: Optional[str] = Field(
        None,
        description='actionType of the action.\nOptional: Only for informational or visualization purposes. Order knows the type.',
    )
    actionDescription: Optional[str] = Field(
        None, description='Additional information on the current action.'
    )
    actionStatus: ActionStatus = Field(
        ...,
        description='WAITING: waiting for the trigger (passing the mode, entering the edge) PAUSED: paused by instantAction or external trigger FAILED: action could not be performed.',
    )
    resultDescription: Optional[str] = Field(
        None,
        description='Description of the result, e.g., the result of a RFID-read. Errors will be transmitted in errors.',
    )


class BatteryState(BaseModel):
    """
    AGVのバッテリー状態を表すモデル。
    
    充電レベル、電圧、健全性、充電中かどうか、走行可能距離などの情報を含みます。
    """
    batteryCharge: float = Field(
        ...,
        description='State of Charge in %:\nIf AGV only provides values for good or bad battery levels, these will be indicated as 20% (bad) and 80% (good).',
    )
    batteryVoltage: Optional[float] = Field(None, description='Battery voltage')
    batteryHealth: Optional[float] = Field(
        None, 
        ge=0.0, 
        le=100.0,
        description='State of health in percent.'
    )
    charging: bool = Field(
        ...,
        description='True: charging in progress. False: AGV is currently not charging.',
    )
    reach: Optional[float] = Field(
        None,
        ge=0.0,
        description='Calculated reach with current battery charge in meters.\nOptional for AGV without this capability.',
    )


class ErrorReference(BaseModel):
    """
    エラーに関連する参照情報を表すモデル。
    
    参照キー(例：nodeId, edgeId, orderId, actionIdなど)とその値からなります。
    エラーの原因や発生場所を特定するのに役立ちます。
    """
    referenceKey: str = Field(
        ...,
        description='Specifies the type of reference used (e.g. nodeId, edgeId, orderId, actionId, etc.).',
    )
    referenceValue: str = Field(
        ...,
        description='The value that belongs to the reference key. For example the ID of the node, where the error occurred.',
    )


class ErrorLevel(Enum):
    """
    エラーの重要度を表す列挙型。
    
    WARNING: 警告(AGVは運転可能)
    FATAL: 致命的エラー(AGVは運転不可、人間の介入が必要)
    """
    WARNING = 'WARNING'
    FATAL = 'FATAL'


class Error(BaseModel):
    """
    AGVで発生したエラーを表すモデル。
    
    エラータイプ、関連する参照情報、説明、対処方法、重要度を含みます。
    """
    errorType: str = Field(..., description='Type/name of error.')
    errorReferences: Optional[List[ErrorReference]] = None
    errorDescription: Optional[str] = Field(
        None,
        description='Verbose description providing details and possible causes of the error.',
    )
    errorHint: Optional[str] = Field(
        None, description='Hint on how to approach or solve the reported error.'
    )
    errorLevel: ErrorLevel = Field(
        ...,
        description='WARNING: the AGV is ready to start (e.g. maintenance cycle expiration warning). FATAL: the AGV is not in running condition, user intervention required (e.g., laser scanner is contaminated).',
    )


class InfoReference(BaseModel):
    """
    情報メッセージに関連する参照情報を表すモデル。
    
    参照キー(例：headerId, orderId, actionIdなど)とその値からなります。
    """
    referenceKey: str = Field(
        ...,
        description='References the type of reference (e.g., headerId, orderId, actionId, etc.).',
    )
    referenceValue: str = Field(
        ...,
        description='References the value, which belongs to the reference key.',
    )


class InfoLevel(Enum):
    """
    情報メッセージの重要度を表す列挙型。
    
    INFO: 一般情報(表示用)
    DEBUG: デバッグ情報
    """
    INFO = 'INFO'
    DEBUG = 'DEBUG'


class Information(BaseModel):
    """
    AGVから送信される追加情報を表すモデル。
    
    情報タイプ、関連する参照情報、説明、重要度を含みます。
    表示やデバッグ目的で使用され、マスターコントロールのロジックには使用されません。
    """
    infoType: str = Field(..., description='Type/name of information.')
    infoReferences: Optional[List[InfoReference]] = None
    infoDescription: Optional[str] = Field(None, description='Info of description.')
    infoLevel: InfoLevel = Field(
        ..., description='DEBUG: used for debugging. INFO: used for visualization.'
    )


class EStop(Enum):
    """
    非常停止の確認タイプを表す列挙型。
    
    AUTOACK: 自動確認可能な非常停止
    MANUAL: 車両上で手動確認が必要な非常停止
    REMOTE: リモートで確認が必要な非常停止
    NONE: 非常停止なし
    """
    AUTOACK = 'AUTOACK'
    MANUAL = 'MANUAL'
    REMOTE = 'REMOTE'
    NONE = 'NONE'


class SafetyState(BaseModel):
    """
    AGVの安全状態を表すモデル。
    
    非常停止状態、保護フィールド侵害の有無などの安全関連情報を含みます。
    """
    eStop: EStop = Field(
        ...,
        description='Acknowledge-Type of eStop: AUTOACK: auto-acknowledgeable e-stop is activated, e.g., by bumper or protective field. MANUAL: e-stop hast to be acknowledged manually at the vehicle. REMOTE: facility e-stop has to be acknowledged remotely. NONE: no e-stop activated.',
    )
    fieldViolation: bool = Field(
        ..., description='Protective field violation.\nTrue: field is violated\nFalse: field is not violated.'
    )


class State(BaseModel):
    """
    AGVの現在の状態を表すルートモデル。
    
    ヘッダー情報、注文情報、位置、速度、積荷状態、バッテリー状態、エラー、
    安全情報など、AGVに関するすべての状態情報を含みます。
    """
    headerId: int = Field(
        ...,
        description='headerId of the message. The headerId is defined per topic and incremented by 1 with each sent (but not necessarily received) message.',
    )
    timestamp: datetime = Field(
        ...,
        description='Timestamp in ISO8601 format (YYYY-MM-DDTHH:mm:ss.ffZ).',
        examples=['1991-03-11T11:40:03.12Z'],
    )
    version: str = Field(
        ...,
        description='Version of the protocol [Major].[Minor].[Patch]',
        examples=['1.3.2'],
    )
    manufacturer: str = Field(..., description='Manufacturer of the AGV')
    serialNumber: str = Field(..., description='Serial number of the AGV.')
    maps: Optional[List[Map]] = Field(
        None,
        description='Array of map-objects that are currently stored on the vehicle.',
    )
    orderId: str = Field(
        ...,
        description='Unique order identification of the current order or the previous finished order. The orderId is kept until a new order is received. Empty string ("") if no previous orderId is available. ',
    )
    orderUpdateId: int = Field(
        ...,
        description='Order Update Identification to identify that an order update has been accepted by the AGV. "0" if no previous orderUpdateId is available.',
    )
    zoneSetId: Optional[str] = Field(
        None,
        description='Unique ID of the zone set that the AGV currently uses for path planning. Must be the same as the one used in the order, otherwise the AGV is to reject the order.\nOptional: If the AGV does not use zones, this field can be omitted.',
    )
    lastNodeId: str = Field(
        ...,
        description='nodeID of last reached node or, if AGV is currently on a node, current node (e.g., "node7"). Empty string ("") if no lastNodeId is available.',
    )
    lastNodeSequenceId: int = Field(
        ...,
        description='sequenceId of the last reached node or, if the AGV is currently on a node, sequenceId of current node. "0" if no lastNodeSequenceId is available. ',
    )
    driving: bool = Field(
        ...,
        description='True: indicates that the AGV is driving and/or rotating. Other movements of the AGV (e.g., lift movements) are not included here.\nFalse: indicates that the AGV is neither driving nor rotating ',
    )
    paused: Optional[bool] = Field(
        None,
        description='True: AGV is currently in a paused state, either because of the push of a physical button on the AGV or because of an instantAction. The AGV can resume the order.\nFalse: The AGV is currently not in a paused state.',
    )
    newBaseRequest: Optional[bool] = Field(
        None,
        description='True: AGV is almost at the end of the base and will reduce speed if no new base is transmitted. Trigger for master control to send new base\nFalse: no base update required.',
    )
    distanceSinceLastNode: Optional[float] = Field(
        None,
        description='Used by line guided vehicles to indicate the distance it has been driving past the "lastNodeId".\nDistance is in meters.',
    )
    operatingMode: OperatingMode = Field(
        ..., description='Current operating mode of the AGV.'
    )
    nodeStates: List[NodeState] = Field(
        ...,
        description='Array of nodeState-Objects, that need to be traversed for fulfilling the order. Empty list if idle.',
    )
    edgeStates: List[EdgeState] = Field(
        ...,
        description='Array of edgeState-Objects, that need to be traversed for fulfilling the order, empty list if idle.',
    )
    agvPosition: Optional[AgvPosition] = Field(
        None,
        description='Defines the position on a map in world coordinates. Each floor has its own map.',
    )
    velocity: Optional[Velocity] = Field(
        None, description='The AGVs velocity in vehicle coordinates'
    )
    loads: Optional[List[Load]] = Field(
        None,
        description='Loads, that are currently handled by the AGV. Optional: If AGV cannot determine load state, leave the array out of the state. If the AGV can determine the load state, but the array is empty, the AGV is considered unloaded.',
    )
    actionStates: List[ActionState] = Field(
        ...,
        description='Contains a list of the current actions and the actions which are yet to be finished. This may include actions from previous nodes that are still in progress\nWhen an action is completed, an updated state message is published with actionStatus set to finished and if applicable with the corresponding resultDescription. The actionStates are kept until a new order is received.',
    )
    batteryState: BatteryState = Field(
        ..., description='Contains all battery-related information.'
    )
    errors: List[Error] = Field(
        ...,
        description='Array of error-objects. All active errors of the AGV should be in the list. An empty array indicates that the AGV has no active errors.',
    )
    information: Optional[List[Information]] = Field(
        None,
        description='Array of info-objects. An empty array indicates, that the AGV has no information. This should only be used for visualization or debugging – it must not be used for logic in master control.',
    )
    safetyState: SafetyState = Field(
        ..., description='Contains all safety-related information.'
    )
